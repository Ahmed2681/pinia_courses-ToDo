import {
  __commonJS
} from "./chunk-RSJERJUL.js";

// node_modules/supertokens-website/lib/build/utils/windowHandler/defaultImplementation.js
var require_defaultImplementation = __commonJS({
  "node_modules/supertokens-website/lib/build/utils/windowHandler/defaultImplementation.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaultWindowHandlerImplementation = void 0;
    function getWindowOrThrow() {
      if (typeof window === "undefined") {
        throw Error(
          "If you are using this package with server-side rendering, please make sure that you are checking if the window object is defined."
        );
      }
      return window;
    }
    var defaultLocalStorageHandler = {
      key: function(index) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().localStorage.key(index)];
          });
        });
      },
      clear: function() {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().localStorage.clear()];
          });
        });
      },
      getItem: function(key) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().localStorage.getItem(key)];
          });
        });
      },
      removeItem: function(key) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().localStorage.removeItem(key)];
          });
        });
      },
      setItem: function(key, value) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().localStorage.setItem(key, value)];
          });
        });
      },
      keySync: function(index) {
        return getWindowOrThrow().localStorage.key(index);
      },
      clearSync: function() {
        return getWindowOrThrow().localStorage.clear();
      },
      getItemSync: function(key) {
        return getWindowOrThrow().localStorage.getItem(key);
      },
      removeItemSync: function(key) {
        return getWindowOrThrow().localStorage.removeItem(key);
      },
      setItemSync: function(key, value) {
        return getWindowOrThrow().localStorage.setItem(key, value);
      }
    };
    var defaultSessionStorageHandler = {
      key: function(index) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().sessionStorage.key(index)];
          });
        });
      },
      clear: function() {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().sessionStorage.clear()];
          });
        });
      },
      getItem: function(key) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().sessionStorage.getItem(key)];
          });
        });
      },
      removeItem: function(key) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().sessionStorage.removeItem(key)];
          });
        });
      },
      setItem: function(key, value) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [2, getWindowOrThrow().sessionStorage.setItem(key, value)];
          });
        });
      },
      keySync: function(index) {
        return getWindowOrThrow().sessionStorage.key(index);
      },
      clearSync: function() {
        return getWindowOrThrow().sessionStorage.clear();
      },
      getItemSync: function(key) {
        return getWindowOrThrow().sessionStorage.getItem(key);
      },
      removeItemSync: function(key) {
        return getWindowOrThrow().sessionStorage.removeItem(key);
      },
      setItemSync: function(key, value) {
        return getWindowOrThrow().sessionStorage.setItem(key, value);
      }
    };
    exports.defaultWindowHandlerImplementation = {
      history: {
        replaceState: function(data, unused, url) {
          return getWindowOrThrow().history.replaceState(data, unused, url);
        },
        getState: function() {
          return getWindowOrThrow().history.state;
        }
      },
      location: {
        getHref: function() {
          return getWindowOrThrow().location.href;
        },
        setHref: function(href) {
          getWindowOrThrow().location.href = href;
        },
        getSearch: function() {
          return getWindowOrThrow().location.search;
        },
        getHash: function() {
          return getWindowOrThrow().location.hash;
        },
        getPathName: function() {
          return getWindowOrThrow().location.pathname;
        },
        assign: function(url) {
          getWindowOrThrow().location.assign(url);
        },
        getHostName: function() {
          return getWindowOrThrow().location.hostname;
        },
        getHost: function() {
          return getWindowOrThrow().location.host;
        },
        getOrigin: function() {
          return getWindowOrThrow().location.origin;
        }
      },
      getDocument: function() {
        return getWindowOrThrow().document;
      },
      getWindowUnsafe: function() {
        return getWindowOrThrow().window;
      },
      localStorage: defaultLocalStorageHandler,
      sessionStorage: defaultSessionStorageHandler
    };
  }
});

// node_modules/supertokens-website/lib/build/utils/windowHandler/index.js
var require_windowHandler = __commonJS({
  "node_modules/supertokens-website/lib/build/utils/windowHandler/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WindowHandlerReference = void 0;
    var defaultImplementation_1 = require_defaultImplementation();
    var WindowHandlerReference = (
      /** @class */
      function() {
        function WindowHandlerReference2(windowHandlerInput) {
          var windowHandlerFunc = function(original) {
            return original;
          };
          if (windowHandlerInput !== void 0) {
            windowHandlerFunc = windowHandlerInput;
          }
          this.windowHandler = windowHandlerFunc(defaultImplementation_1.defaultWindowHandlerImplementation);
        }
        WindowHandlerReference2.init = function(windowHandlerInput) {
          if (WindowHandlerReference2.instance !== void 0) {
            return;
          }
          WindowHandlerReference2.instance = new WindowHandlerReference2(windowHandlerInput);
        };
        WindowHandlerReference2.getReferenceOrThrow = function() {
          if (WindowHandlerReference2.instance === void 0) {
            throw new Error("SuperTokensWindowHandler must be initialized before calling this method.");
          }
          return WindowHandlerReference2.instance;
        };
        return WindowHandlerReference2;
      }()
    );
    exports.WindowHandlerReference = WindowHandlerReference;
    exports.default = WindowHandlerReference;
  }
});

// node_modules/supertokens-website/utils/windowHandler/index.js
var require_windowHandler2 = __commonJS({
  "node_modules/supertokens-website/utils/windowHandler/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m)
        if (!exports.hasOwnProperty(p))
          exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_windowHandler());
  }
});

// node_modules/supertokens-web-js/lib/build/windowHandler/index.js
var require_windowHandler3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/windowHandler/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.WindowHandlerReference = void 0;
    var windowHandler_1 = require_windowHandler2();
    Object.defineProperty(exports, "WindowHandlerReference", {
      enumerable: true,
      get: function() {
        return windowHandler_1.WindowHandlerReference;
      }
    });
  }
});

// node_modules/supertokens-web-js/lib/build/constants.js
var require_constants = __commonJS({
  "node_modules/supertokens-web-js/lib/build/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SSR_ERROR = exports.DEFAULT_API_BASE_PATH = void 0;
    exports.DEFAULT_API_BASE_PATH = "/auth";
    exports.SSR_ERROR = "\nIf you are trying to use this method doing server-side-rendering, please make sure you move this method inside a componentDidMount method or useEffect hook.";
  }
});

// node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js
var require_normalisedURLDomain = __commonJS({
  "node_modules/supertokens-web-js/lib/build/normalisedURLDomain.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NormalisedURLDomain = (
      /** @class */
      function() {
        function NormalisedURLDomain2(url) {
          var _this = this;
          this.getAsStringDangerous = function() {
            return _this.value;
          };
          this.value = normaliseURLDomainOrThrowError(url);
        }
        return NormalisedURLDomain2;
      }()
    );
    exports.default = NormalisedURLDomain;
    function normaliseURLDomainOrThrowError(input, ignoreProtocol) {
      if (ignoreProtocol === void 0) {
        ignoreProtocol = false;
      }
      function isAnIpAddress(ipaddress) {
        return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(
          ipaddress
        );
      }
      input = input.trim();
      try {
        if (!input.startsWith("http://") && !input.startsWith("https://")) {
          throw new Error("Error converting to proper URL");
        }
        var urlObj = new URL(input);
        if (ignoreProtocol) {
          if (urlObj.hostname.startsWith("localhost") || isAnIpAddress(urlObj.hostname)) {
            input = "http://" + urlObj.host;
          } else {
            input = "https://" + urlObj.host;
          }
        } else {
          input = urlObj.protocol + "//" + urlObj.host;
        }
        return input;
      } catch (err) {
      }
      if (input.startsWith("/")) {
        throw new Error("Please provide a valid domain name");
      }
      if (input.indexOf(".") === 0) {
        input = input.substr(1);
      }
      if ((input.indexOf(".") !== -1 || input.startsWith("localhost")) && !input.startsWith("http://") && !input.startsWith("https://")) {
        input = "https://" + input;
        try {
          new URL(input);
          return normaliseURLDomainOrThrowError(input, true);
        } catch (err) {
        }
      }
      throw new Error("Please provide a valid domain name");
    }
  }
});

// node_modules/supertokens-web-js/lib/build/normalisedURLPath.js
var require_normalisedURLPath = __commonJS({
  "node_modules/supertokens-web-js/lib/build/normalisedURLPath.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var NormalisedURLPath = (
      /** @class */
      function() {
        function NormalisedURLPath2(url) {
          var _this = this;
          this.startsWith = function(other) {
            return _this.value.startsWith(other.value);
          };
          this.appendPath = function(other) {
            return new NormalisedURLPath2(_this.value + other.value);
          };
          this.getAsStringDangerous = function() {
            return _this.value;
          };
          this.value = normaliseURLPathOrThrowError(url);
        }
        return NormalisedURLPath2;
      }()
    );
    exports.default = NormalisedURLPath;
    function normaliseURLPathOrThrowError(input) {
      input = input.trim();
      try {
        if (!input.startsWith("http://") && !input.startsWith("https://")) {
          throw new Error("Error converting to proper URL");
        }
        var urlObj = new URL(input);
        input = urlObj.pathname;
        if (input.charAt(input.length - 1) === "/") {
          return input.substr(0, input.length - 1);
        }
        return input;
      } catch (err) {
      }
      if ((domainGiven(input) || input.startsWith("localhost")) && !input.startsWith("http://") && !input.startsWith("https://")) {
        input = "http://" + input;
        return normaliseURLPathOrThrowError(input);
      }
      if (input.charAt(0) !== "/") {
        input = "/" + input;
      }
      try {
        new URL("http://example.com" + input);
        return normaliseURLPathOrThrowError("http://example.com" + input);
      } catch (err) {
        throw new Error("Please provide a valid URL path");
      }
    }
    function domainGiven(input) {
      if (input.indexOf(".") === -1 || input.startsWith("/")) {
        return false;
      }
      try {
        var url = new URL(input);
        return url.hostname.indexOf(".") !== -1;
      } catch (e) {
      }
      try {
        var url = new URL("http://" + input);
        return url.hostname.indexOf(".") !== -1;
      } catch (e) {
      }
      return false;
    }
  }
});

// node_modules/supertokens-web-js/lib/build/utils.js
var require_utils = __commonJS({
  "node_modules/supertokens-web-js/lib/build/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getHashFromLocation = exports.getNormalisedUserContext = exports.checkForSSRErrorAndAppendIfNeeded = exports.getQueryParams = exports.isTest = exports.normaliseInputAppInfoOrThrowError = exports.appendQueryParamsToURL = void 0;
    var windowHandler_1 = require_windowHandler3();
    var constants_1 = require_constants();
    var normalisedURLDomain_1 = require_normalisedURLDomain();
    var normalisedURLPath_1 = require_normalisedURLPath();
    function appendQueryParamsToURL(stringUrl, queryParams) {
      if (queryParams === void 0) {
        return stringUrl;
      }
      try {
        var url_1 = new URL(stringUrl);
        Object.entries(queryParams).forEach(function(_a) {
          var key = _a[0], value = _a[1];
          url_1.searchParams.set(key, value);
        });
        return url_1.href;
      } catch (e) {
        var fakeDomain = stringUrl.startsWith("/") ? "http:localhost" : "http://localhost/";
        var url_2 = new URL("".concat(fakeDomain).concat(stringUrl));
        Object.entries(queryParams).forEach(function(_a) {
          var key = _a[0], value = _a[1];
          url_2.searchParams.set(key, value);
        });
        return "".concat(url_2.pathname).concat(url_2.search);
      }
    }
    exports.appendQueryParamsToURL = appendQueryParamsToURL;
    function getNormalisedURLPathOrDefault(defaultPath, path) {
      if (path !== void 0) {
        return new normalisedURLPath_1.default(path);
      } else {
        return new normalisedURLPath_1.default(defaultPath);
      }
    }
    function normaliseInputAppInfoOrThrowError(appInfo) {
      if (appInfo === void 0) {
        throw new Error("Please provide the appInfo object when calling supertokens.init");
      }
      if (appInfo.apiDomain === void 0) {
        throw new Error("Please provide your apiDomain inside the appInfo object when calling supertokens.init");
      }
      if (appInfo.appName === void 0) {
        throw new Error("Please provide your appName inside the appInfo object when calling supertokens.init");
      }
      var apiGatewayPath = new normalisedURLPath_1.default("");
      if (appInfo.apiGatewayPath !== void 0) {
        apiGatewayPath = new normalisedURLPath_1.default(appInfo.apiGatewayPath);
      }
      return {
        appName: appInfo.appName,
        apiDomain: new normalisedURLDomain_1.default(appInfo.apiDomain),
        apiBasePath: apiGatewayPath.appendPath(
          getNormalisedURLPathOrDefault(constants_1.DEFAULT_API_BASE_PATH, appInfo.apiBasePath)
        )
      };
    }
    exports.normaliseInputAppInfoOrThrowError = normaliseInputAppInfoOrThrowError;
    function isTest() {
      try {
        return process.env.TEST_MODE === "testing";
      } catch (err) {
        return false;
      }
    }
    exports.isTest = isTest;
    function getQueryParams(param) {
      var urlParams = new URLSearchParams(
        windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch()
      );
      var queryParam = urlParams.get(param);
      if (queryParam === null) {
        return void 0;
      }
      return queryParam;
    }
    exports.getQueryParams = getQueryParams;
    function checkForSSRErrorAndAppendIfNeeded(error) {
      if (typeof window === "undefined") {
        error = error + constants_1.SSR_ERROR;
      }
      return error;
    }
    exports.checkForSSRErrorAndAppendIfNeeded = checkForSSRErrorAndAppendIfNeeded;
    function getNormalisedUserContext(userContext) {
      return userContext === void 0 ? {} : userContext;
    }
    exports.getNormalisedUserContext = getNormalisedUserContext;
    function getHashFromLocation() {
      return windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHash().substring(1);
    }
    exports.getHashFromLocation = getHashFromLocation;
  }
});

// node_modules/supertokens-website/lib/build/utils/cookieHandler/defaultImplementation.js
var require_defaultImplementation2 = __commonJS({
  "node_modules/supertokens-website/lib/build/utils/cookieHandler/defaultImplementation.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f)
          throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t)
              op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2])
                  _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5)
          throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaultCookieHandlerImplementation = void 0;
    var windowHandler_1 = require_windowHandler();
    exports.defaultCookieHandlerImplementation = {
      getCookie: function() {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            return [
              2,
              windowHandler_1.default.getReferenceOrThrow().windowHandler.getWindowUnsafe().document.cookie
            ];
          });
        });
      },
      setCookie: function(cookieString) {
        return __awaiter(this, void 0, void 0, function() {
          return __generator(this, function(_a) {
            windowHandler_1.default.getReferenceOrThrow().windowHandler.getWindowUnsafe().document.cookie = cookieString;
            return [
              2
              /*return*/
            ];
          });
        });
      }
    };
  }
});

// node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js
var require_cookieHandler = __commonJS({
  "node_modules/supertokens-website/lib/build/utils/cookieHandler/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CookieHandlerReference = void 0;
    var defaultImplementation_1 = require_defaultImplementation2();
    var CookieHandlerReference = (
      /** @class */
      function() {
        function CookieHandlerReference2(cookieHandlerInput) {
          var cookieHandlerFunc = function(original) {
            return original;
          };
          if (cookieHandlerInput !== void 0) {
            cookieHandlerFunc = cookieHandlerInput;
          }
          this.cookieHandler = cookieHandlerFunc(defaultImplementation_1.defaultCookieHandlerImplementation);
        }
        CookieHandlerReference2.init = function(cookieHandlerInput) {
          if (CookieHandlerReference2.instance !== void 0) {
            return;
          }
          CookieHandlerReference2.instance = new CookieHandlerReference2(cookieHandlerInput);
        };
        CookieHandlerReference2.getReferenceOrThrow = function() {
          if (CookieHandlerReference2.instance === void 0) {
            throw new Error("SuperTokensCookieHandler must be initialized before calling this method.");
          }
          return CookieHandlerReference2.instance;
        };
        return CookieHandlerReference2;
      }()
    );
    exports.CookieHandlerReference = CookieHandlerReference;
    exports.default = CookieHandlerReference;
  }
});

export {
  require_windowHandler,
  require_windowHandler3 as require_windowHandler2,
  require_normalisedURLPath,
  require_utils,
  require_cookieHandler
};
//# sourceMappingURL=chunk-P7PG7344.js.map
